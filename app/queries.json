{
    "apiVersion": "1.0",
    "swaggerVersion": "1.2",
    "basePath": "http://secxbrl.alpha.xbrl.io/v1/_queries/public/api",
    "resourcePath": "",
    "produces": [
        "application/json"
    ],
    "description": "<p>This API allows its users to retrieve financial information provided to the US Securities and Exchange Commission (SEC) by public companies using the XBRL global standard technical syntax. Submitted XBRL information is read by the system, converted to a format which is optimized for query (as opposed to XBRL which is optimized for information exchange), and stored in a database in that queriable format. Additional metadata is added to the system which is commonly used when querying this financial information. Please note that only financial information provided within SEC forms 10-Q and 10-K is provided via this system.</p> <p>Information can be retrieved about entities, the submissions made by those entities, the components contained within those submissions, the model structure of a component, or the facts reported within a component.  All information is provided in the following formats:  JSON (the default), XML, CSV, and Excel.</p> <p>For more information about using this system, you can download this Excel spreadsheet which contains working examples.  Also, this getting started guide is helpful in understanding the information provided by this system.</p> <p>Please note that information outside of the DOW30 can only be accessed using a valid token that can be retrieved by creating an account on http://www.secxbrl.info and login is done using the Session API.</p> <p>Also note, that the POST method can be simulated by using GET and adding the _method=POST parameter to the HTTP request.</p>",
    "apis": [
        {
            "path": "/entities.jq",
            "description": "Entities",
            "operations": [
                {
                    "method": "POST",
                    "summary": "Retrieve information about all or a selection of entities",
                    "notes": "",
                    "type": "EntityListing",
                    "nickname": "listEntities",
                    "parameters": [
                        {
                            "name": "format",
                            "description": "The result format",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "json",
                                "csv",
                                "xml",
                                "excel"
                            ],
                            "paramType": "query"
                        },
                        {
                            "name": "tag",
                            "description": "A tag to filter",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "DOW30",
                                "SP500",
                                "FORTUNE100",
                                "PJI"
                            ],
                            "paramType": "query"
                        },
                        {
                            "name": "cik",
                            "description": "A CIK number",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "ticker",
                            "description": "A ticker symbols",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 401,
                            "message": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges",
                            "responseModel": "Error"
                        },
                        {
                            "code": 500,
                            "message": "An internal error occurred during the processing of the request.",
                            "responseModel": "Error"
                        }
                    ],
                    "successMessages": [
                        {
                            "code": 200,
                            "message": "Returns query listing."
                        }
                    ],
                    "examples": [
                        {
                            "title": "Retrieve a specific entity",
                            "description": "Retrieve information about a specific entity identified by its CIK and return the result as JSON.",
                            "request": "[API_URL]/_queries/public/api/entities.jq?_method=POST&cik=1412090",
                            "response": ""
                        },
                        {
                            "title": "Retrieve all entities",
                            "description": "Retrieve information about all entities and return the information as XML.",
                            "request": "[API_URL]/_queries/public/api/entities.jq?_method=POST&format=xml",
                            "response": ""
                        },
                        {
                            "title": "Retrieve information about all DOW30 entities",
                            "description": "Retrieve information about all DOW30 entities and return the result as CSV.",
                            "request": "[API_URL]/_queries/public/api/entities.jq?_method=POST&tag=DOW30&format=csv",
                            "response": ""
                        }
                    ]
                }
            ]
        },
        {
            "path": "/filings.jq",
            "description": "Filings",
            "operations": [
                {
                    "method": "POST",
                    "summary": "Retrieve the filings of a particular entity",
                    "notes": "",
                    "nickname": "listFilings",
                    "parameters": [
                        {
                            "name": "format",
                            "description": "The result format",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "json",
                                "csv",
                                "xml",
                                "excel"
                            ],
                            "paramType": "query"
                        },
                        {
                            "name": "cik",
                            "description": "The CIK of the entity",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "token",
                            "description": "The token of the current session (if accessing entities beyond DOW30)",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 401,
                            "message": "Unauthorized: the specified project token is invalid, expired, or has insufficient privliges",
                            "responseModel": "Error"
                        },
                        {
                            "code": 500,
                            "message": "An internal error occurred during the processing of the request.",
                            "responseModel": "Error"
                        }
                    ],
                    "successMessages": [
                        {
                            "code": 200,
                            "message": "Returns all filings for the given entity."
                        }
                    ],
                    "examples": [
                        {
                            "title": "Retrieve the filings of a specific entity",
                            "description": "Retrieve information about the filings of an entity identified by its CIK. Return the result as XML.",
                            "request": "[API_URL]/_queries/public/api/filings.jq.xml?_method=POST&cik=66740&format=xml",
                            "response": ""
                        }
                    ]
                }
            ]
        },
        {
            "path": "/components.jq",
            "description": "Components",
            "operations": [
                {
                    "method": "POST",
                    "summary": "Retrieve a summary for all components of a given filing",
                    "notes": "",
                    "type": "EntityListing",
                    "nickname": "listEntities",
                    "parameters": [
                        {
                            "name": "format",
                            "description": "The result format",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "json",
                                "csv",
                                "xml",
                                "excel"
                            ],
                            "paramType": "query"
                        },
                        {
                            "name": "aid",
                            "description": "The id of the filing",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 401,
                            "message": "Unauthorized: the specified project token is invalid, expired, or has insufficient privliges",
                            "responseModel": "Error"
                        },
                        {
                            "code": 500,
                            "message": "An internal error occurred during the processing of the request.",
                            "responseModel": "Error"
                        }
                    ],
                    "successMessages": [
                        {
                            "code": 200,
                            "message": "Returns all components for the given filing"
                        }
                    ],
                    "examples": [
                        {
                            "title" : "Retrieve information about all components of a filing",
                            "description": "Retrieve information about all components of a particular filing which is identified by its accession number. The result is returned as JSON.",
                            "request": "[API_URL]/_queries/public/api/components.jq?_method=POST&aid=0000021344-13-000039",
                            "response": ""
                        }
                    ]
                }
            ]
        },
        {
            "path": "/facttable.jq",
            "description": "Retrieve a Fact Table",
            "operations": [
                {
                    "method": "POST",
                    "summary": "Retrieve the fact table for a given component",
                    "notes": "",
                    "type": "EntityListing",
                    "nickname": "listEntities",
                    "parameters": [
                        {
                            "name": "format",
                            "description": "The result format",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "json",
                                "csv",
                                "xml",
                                "excel"
                            ],
                            "paramType": "query"
                        },
                        {
                            "name": "cid",
                            "description": "The id of the component",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 401,
                            "message": "Unauthorized: the specified project token is invalid, expired, or has insufficient privliges",
                            "responseModel": "Error"
                        },
                        {
                            "code": 500,
                            "message": "An internal error occurred during the processing of the request.",
                            "responseModel": "Error"
                        }
                    ],
                    "successMessages": [
                        {
                            "code": 200,
                            "message": "Return the fact table for the given component"
                        }
                    ],
                    "examples": [
                        {
                            "title": "Fact Table as CSV",
                            "description": "Retrieve the fact table for a particular component and return the result as CSV.",
                            "request": "[API_URL]/_queries/public/api/facttable.jq?_method=POST&cid=9d3fb56e-831a-4759-84b8-54550f8aee01&format=csv",
                            "response": ""
                        }
                    ]
                }
            ]
        },
        {
            "path": "/modelstructure.jq",
            "description": "Retrieve a Model Structure",
            "operations": [
                {
                    "method": "POST",
                    "summary": "Retrieve the model structure for a given component",
                    "notes": "",
                    "type": "EntityListing",
                    "nickname": "listModelStructure",
                    "parameters": [
                        {
                            "name": "format",
                            "description": "The result format",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "json",
                                "csv",
                                "xml",
                                "excel"
                            ],
                            "paramType": "query"
                        },
                        {
                            "name": "cid",
                            "description": "The id of the component",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 401,
                            "message": "Unauthorized: the specified project token is invalid, expired, or has insufficient privliges",
                            "responseModel": "Error"
                        },
                        {
                            "code": 500,
                            "message": "An internal error occurred during the processing of the request.",
                            "responseModel": "Error"
                        }
                    ],
                    "successMessages": [
                        {
                            "code": 200,
                            "message": "Return the model structure for the given component"
                        }
                    ],
                    "examples": [
                        {
                            "title": "Fact Table as CSV",
                            "description": "Retrieve the model structure for a particular component and return the result as XML.",
                            "request": "[API_URL]/_queries/public/api/modelstructure.jq?_method=POST&cid=9d3fb56e-831a-4759-84b8-54550f8aee01&format=xml",
                            "response": ""
                        }
                    ]
                }
            ]
        },
        {
            "path": "/facts.jq",
            "description": "Retrieve Facts",
            "operations": [
                {
                    "method": "POST",
                    "summary": "Retrieve one or more facts for a combination of entity and concept.",
                    "notes": "",
                    "type": "FactListing",
                    "nickname": "listFact",
                    "parameters": [
                        {
                            "name": "format",
                            "description": "The result format",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "json",
                                "csv",
                                "xml",
                                "excel"
                            ],
                            "paramType": "query"
                        },
                        {
                            "name": "cik",
                            "description": "The CIK of the entity",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "ticker",
                            "description": "The ticker of the entity",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "tag",
                            "description": "The tag to filter entities",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "DOW30",
                                "SP500",
                                "FORTUNE100",
                                "PJI"
                            ],
                            "paramType": "query"
                        },
                        {
                            "name": "sic",
                            "description": "The industry group",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "fiscalYear",
                            "description": "The fiscal year of the fact to retrieve (default: LATEST)",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum": [
                                "year (e.g. 2011)",
                                "LATEST",
                                "ALL"
                            ]
                        },
                        {
                            "name": "concept",
                            "description": "The name of the concept to retrieve the fact for",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "fiscalPeriod",
                            "description": "The fiscal period of the fact to retrieve (default: FY)",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "Q1",
                                "Q2",
                                "Q3",
                                "FY",
                                "ALL"
                            ],
                            "paramType": "query"
                        },
                        {
                            "name": "map",
                            "description": "The concept map that should be used to resolve the concept (default: none)",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "FundamentalAccountingConcepts  <a href=\"/concept-map/FundamentalAccountingConcepts\"><i class=\"fa fa-question\"></i>"
                              ],
                            "paramType": "query"
                        },
                        {
                            "name": "token",
                            "description": "The token of the current session (if accessing entities beyond DOW30)",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 400,
                            "message": "Bad request: a parameter is missing or invalid or total is used together with csv or excel serialization",
                            "responseModel": "Error"
                        },
                        {
                            "code": 401,
                            "message": "Unauthorized: the specified project token is invalid, expired, or has insufficient privliges",
                            "responseModel": "Error"
                        },
                        {
                            "code": 500,
                            "message": "An internal error occurred during the processing of the request.",
                            "responseModel": "Error"
                        }
                    ],
                    "successMessages": [
                        {
                            "code": 200,
                            "message": "Returns the fact listing",
                            "responseModel": "FactListing"
                        }
                    ],
                    "examples": [
                        {
                            "title": "Retrieve us-gaap:Assets for DOW30",
                            "description": "Retrieve the value of us-gaap:Assets for all DOW30 entities for the latest reported year. Return the result as JSON.",
                            "request": "[API_URL]/_queries/public/api/facts.jq?_method=POST&concept=us-gaap:Assets&tag=dow30",
                            "response": ""
                        },
                        {
                            "title": "Retrieve fac:NetCashFlow for DOW30",
                            "description": "Retrieve the value of fac:NetCashFlow (using the FundamentalAccountingConcepts map) for the DOW30 entities for the year 2011. Return the result as CSV.",
                            "request": "[API_URL]/_queries/public/api/facts.jq?_method=POST&concept=fac:NetCashFlow&tag=dow30&map=FundamentalAccountingConcepts&fiscalYear=2011&format=csv",
                            "response": ""
                        }
                    ]
                }
            ]
        }


    ],
    "models": {
        "Error": {
            "id": "Error",
            "description": "Error information",
            "required": [
                "success",
                "description"
            ],
            "properties": {
                "success": {
                    "type": "boolean",
                    "description": "Whether the requests succeeded or failed."
                },
                "description": {
                    "type": "string",
                    "description": "A description of the error."
                }
            }
        }
    }
}
