{ "apiVersion" : "1.0.0", "swaggerVersion" : "1.2", "basePath" : "http://secxbrl.28.io/v1/_queries/public", "resourcePath" : "", "produces" : [ "application/json" ], "description" : "This API can be used to manage users. Note, that the POST method can be simulated by using GET and adding the _method=POST parameter to the HTTP request. ", "api" : [ { "path" : "/users/get.jq", "description" : "", "operations" : [ { "method" : "GET", "nickname" : "getUser", "summary" : "Retrieve user record by ID or email", "parameters" : [ { "name" : "userid", "description" : "", "required" : false, "type" : "string", "paramType" : "query" }, { "name" : "email", "description" : "", "required" : false, "type" : "string", "paramType" : "query" }, { "name" : "token", "description" : "The token of the current session", "required" : false, "type" : "string", "paramType" : "query" }, { "name" : "_method", "description" : "", "required" : false, "type" : "", "paramType" : "query" } ], "responseMessages" : [ { "code" : 500, "message" : "Not done yet" } ], "successMessages" : [  ], "examples" : [  ] } ] }, { "path" : "/users/new.jq", "description" : "", "operations" : [ { "method" : "POST", "nickname" : "newUser", "summary" : "Create new user record", "parameters" : [ { "name" : "firstname", "description" : "", "required" : true, "type" : "string", "paramType" : "query" }, { "name" : "lastname", "description" : "", "required" : true, "type" : "string", "paramType" : "query" }, { "name" : "email", "description" : "", "required" : true, "type" : "string", "paramType" : "query" }, { "name" : "password", "description" : "Will be removed after notifications are implemented.", "required" : true, "type" : "string", "paramType" : "query" }, { "name" : "_method", "description" : "", "required" : false, "type" : "", "paramType" : "query" } ], "responseMessages" : [ { "code" : 500, "message" : "Not done yet" } ], "successMessages" : [  ], "examples" : [  ] } ] }, { "path" : "/users/edit.jq", "description" : "", "operations" : [ { "method" : "POST", "nickname" : "editUser", "summary" : "Edit user record", "parameters" : [ { "name" : "userid", "description" : "", "required" : true, "type" : "string", "paramType" : "query" }, { "name" : "firstname", "description" : "", "required" : true, "type" : "string", "paramType" : "query" }, { "name" : "lastname", "description" : "", "required" : true, "type" : "string", "paramType" : "query" }, { "name" : "newemail", "description" : "", "required" : false, "type" : "string", "paramType" : "query" }, { "name" : "email", "description" : "Email of the authorized user (needed if changing the email)", "required" : false, "type" : "string", "paramType" : "query" }, { "name" : "password", "description" : "Password of the authorized user (needed if changing the email)", "required" : false, "type" : "string", "paramType" : "query" }, { "name" : "token", "description" : "The token of the current session", "required" : false, "type" : "string", "paramType" : "query" }, { "name" : "_method", "description" : "", "required" : false, "type" : "", "paramType" : "query" } ], "responseMessages" : [ { "code" : 400, "message" : "if a mandatory parameter is missing" }, { "code" : 403, "message" : "if the user doesn't exist or could not be authenticated" } ], "successMessages" : [  ], "examples" : [  ] } ] }, { "path" : "/users/resetPassword.jq", "description" : "", "operations" : [ { "method" : "POST", "nickname" : "resetPassword", "summary" : "Change user password", "parameters" : [ { "name" : "userid", "description" : "Id of the user", "required" : true, "type" : "string", "paramType" : "query" }, { "name" : "newpassword", "description" : "New password", "required" : true, "type" : "string", "paramType" : "query" }, { "name" : "email", "description" : "Email of the authorized user", "required" : true, "type" : "string", "paramType" : "query" }, { "name" : "password", "description" : "Password of the authorized user", "required" : true, "type" : "string", "paramType" : "query" }, { "name" : "token", "description" : "The token of the current session", "required" : false, "type" : "string", "paramType" : "query" }, { "name" : "_method", "description" : "", "required" : false, "type" : "", "paramType" : "query" } ], "responseMessages" : [ { "code" : 400, "message" : "if a mandatory parameter is missing" }, { "code" : 403, "message" : "if the user doesn't exist or could not be authenticated" } ], "successMessages" : [  ], "examples" : [  ] } ] }, { "path" : "/users/forgotPassword.jq", "description" : "", "operations" : [ { "method" : "POST", "nickname" : "forgotPassword", "summary" : "Send the email with the reset password token", "parameters" : [ { "name" : "email", "description" : "", "required" : true, "type" : "string", "paramType" : "query" } ], "responseMessages" : [  ], "successMessages" : [  ], "examples" : [  ] } ] }, { "path" : "/users/setPassword.jq", "description" : "", "operations" : [ { "method" : "POST", "nickname" : "setPassword", "summary" : "Set the password for a user based on email and the reset password token", "parameters" : [ { "name" : "email", "description" : "The email of the user to set the password", "required" : true, "type" : "string", "paramType" : "query" }, { "name" : "password", "description" : "The new password", "required" : true, "type" : "string", "paramType" : "query" }, { "name" : "resetToken", "description" : "The reset password token", "required" : true, "type" : "string", "paramType" : "query" }, { "name" : "_method", "description" : "", "required" : false, "type" : "", "paramType" : "query" } ], "responseMessages" : [ { "code" : 400, "message" : "if a mandatory parameter is missing" }, { "code" : 403, "message" : "if the user doesn't exist or the token is invalid" } ], "successMessages" : [  ], "examples" : [  ] } ] }, { "path" : "/users/getPicture.jq", "description" : "", "operations" : [ { "method" : "GET", "nickname" : "getPicture", "summary" : "Get user picture", "parameters" : [ { "name" : "userid", "description" : "User ID to get picture for. Default is current user.", "required" : false, "type" : "string", "paramType" : "query" }, { "name" : "token", "description" : "The token of the current session", "required" : true, "type" : "string", "paramType" : "query" }, { "name" : "_method", "description" : "", "required" : false, "type" : "", "paramType" : "query" } ], "responseMessages" : [ { "code" : 500, "message" : "Not done yet" } ], "successMessages" : [  ], "examples" : [  ] } ] }, { "path" : "/users/uploadPicture.jq", "description" : "", "operations" : [ { "method" : "POST", "nickname" : "uploadPicture", "summary" : "Upload user picture", "parameters" : [ { "name" : "userid", "description" : "", "required" : true, "type" : "string", "paramType" : "query" }, { "name" : "image", "description" : "The image file", "required" : true, "type" : "file", "paramType" : "query" }, { "name" : "token", "description" : "The token of the current session", "required" : true, "type" : "string", "paramType" : "query" }, { "name" : "_method", "description" : "", "required" : false, "type" : "", "paramType" : "query" } ], "responseMessages" : [ { "code" : 500, "message" : "Not done yet" } ], "successMessages" : [  ], "examples" : [  ] } ] }, { "path" : "/users/removePicture.jq", "description" : "", "operations" : [ { "method" : "POST", "nickname" : "removePicture", "summary" : "Remove user picture", "parameters" : [ { "name" : "userid", "description" : "", "required" : true, "type" : "string", "paramType" : "query" }, { "name" : "token", "description" : "The token of the current session", "required" : true, "type" : "string", "paramType" : "query" }, { "name" : "_method", "description" : "", "required" : false, "type" : "", "paramType" : "query" } ], "responseMessages" : [ { "code" : 500, "message" : "Not done yet" } ], "successMessages" : [  ], "examples" : [  ] } ] }, { "path" : "/users/isAuthorized.jq", "description" : "", "operations" : [ { "method" : "POST", "nickname" : "isAuthorized", "summary" : "Checks to see if the current logged in user has a particular right", "parameters" : [ { "name" : "right", "description" : "The right id", "required" : true, "type" : "string", "paramType" : "query" }, { "name" : "token", "description" : "The token of the current session", "required" : true, "type" : "string", "paramType" : "query" }, { "name" : "_method", "description" : "", "required" : false, "type" : "", "paramType" : "query" } ], "responseMessages" : [ { "code" : 400, "message" : "if a mandatory parameter is missing" }, { "code" : 403, "message" : "if the user doesn't exist or the token is invalid" }, { "code" : 500, "message" : "if the user doesn't have the right" } ], "successMessages" : [  ], "examples" : [  ] } ] } ] }