{
    "apiVersion":"1.0.0",
    "swaggerVersion":"1.2",
    "basePath": "http://secxbrl.28.io/v1/_queries/public",
    "resourcePath": "",
    "produces":["application/json"],
    "description": "This API can be used to manage archives. Note, that the POST method can be simulated by using GET and adding the _method=POST parameter to the HTTP request. ",
    "apis":[        
        {
            "path":"/archives/import.jq",
            "operations":[
                {
                    "method":"POST",
                    "summary":"Imports a new archive",
                    "notes":"",
                    "type":"ImportResult",
                    "nickname":"importArchive",
                    "parameters":[
                        {
                            "name":"archiveId",
                            "description":"The id of the imported archive; if empty a random one will be generated",
                            "required":false,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name":"profile",
                            "description":"Whether to use a specific profile for importing the archive (default is NOPROFILE)",
                            "required":false,
                            "type":"string",
                            "paramType":"query",
                            "enum" : [ "SEC", "SVS", "UK", "DUTCH", "NOPROFILE" ]
                        },
                        {
                            "name":"overwrite",
                            "description":"Whether to overwrite an already imported archive with the same id (default is false)",
                            "required":false,
                            "type":"boolean",
                            "paramType":"query"
                        },
                        {
                        	"name" : "Content-Type", 
        					"paramType" : "header", 
        					"required" : false, 
        					"description" : "Use text/plain to specify a URL where the archive can be retrieved, application/xml to provide a single xml file, or application/zip", 
        					"type" : "string", 
        					"enum" : [ "text/plain", "application/xml", "application/zip" ]
                        },
                        {
                            "name": "token",
                            "description": "The token of the current session",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages":[
                        {
                            "code":500,
                            "message":"Not done yet"
                        }
                    ]
                }
            ]
        },
        {
            "path":"/users/new.jq",
            "operations":[
                {
                    "method":"POST",
                    "summary":"Create new user record",
                    "notes":"",
                    "type":"User",
                    "nickname":"newUser",
                    "parameters":[                       
                        {
                            "name":"firstname",
                            "description":"",
                            "required":true,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name":"lastname",
                            "description":"",
                            "required":true,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name":"email",
                            "description":"",
                            "required":true,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name":"password",
                            "description":"Will be removed after notifications are implemented.",
                            "required":true,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name": "_method",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages":[
                        {
                            "code":500,
                            "message":"Not done yet"
                        }
                    ]
                }
            ]
        },
        {
            "path":"/users/edit.jq",
            "operations":[
                {
                    "method":"POST",
                    "summary":"Edit user record",
                    "notes":"",
                    "type":"User",
                    "nickname":"editUser",
                    "parameters":[
                        {
                            "name":"userid",
                            "description":"",
                            "required":true,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name":"firstname",
                            "description":"",
                            "required":true,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name":"lastname",
                            "description":"",
                            "required":true,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name":"newemail",
                            "description":"",
                            "required":false,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name":"email",
                            "description":"Email of the authorized user (needed if changing the email)",
                            "required":false,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name":"password",
                            "description":"Password of the authorized user (needed if changing the email)",
                            "required":false,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name": "token",
                            "description": "The token of the current session",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "_method",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages":[
                        {
                            "code": 400,
                            "message": "if a mandatory parameter is missing",
                            "responseModel": "Error"
                        },
                        {
                            "code" : 403,
                            "message": "if the user doesn't exist or could not be authenticated",
                            "responseModel": "Error"
                        }
                    ],
                    "successMessages" : [
                        {
                            "code": 200,
                            "message": "if the user's infos were updated successfully",
                            "responseModel": "Success"
                        }
                    ]
                }
            ]
        },
        {
            "path":"/users/resetPassword.jq",
            "operations":[
                {
                    "method":"POST",
                    "summary":"Change user password",
                    "notes":"",
                    "type":"User",
                    "nickname":"resetPassword",
                    "parameters":[
                        {
                            "name":"userid",
                            "description":"Id of the user",
                            "required":true,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name":"newpassword",
                            "description":"New password",
                            "required":true,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name":"email",
                            "description":"Email of the authorized user",
                            "required":true,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name":"password",
                            "description":"Password of the authorized user",
                            "required":true,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name": "token",
                            "description": "The token of the current session",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "_method",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages":[
                        {
                            "code": 400,
                            "message": "if a mandatory parameter is missing",
                            "responseModel": "Error"
                        },
                        {
                            "code" : 403,
                            "message": "if the user doesn't exist or could not be authenticated",
                            "responseModel": "Error"
                        }
                    ],
                    "successMessages" : [
                        {
                            "code": 200,
                            "message": "if the user's password was updated successfully",
                            "responseModel": "Success"
                        }
                    ]
                }
            ]
        },
        {
            "path":"/users/forgotPassword.jq",
            "operations":[
                {
                    "method":"POST",
                    "summary":"Send the email with the reset password token",
                    "notes":"",
                    "type":"Success",
                    "nickname":"forgotPassword",
                    "parameters":[
                        {
                            "name":"email",
                            "description":"",
                            "required":true,
                            "type":"string",
                            "paramType":"query"
                        }
                    ],
                    "successMessages" : [
                        {
                            "code": 200,
                            "message": "if the user's reset password token was sent via email",
                            "responseModel": "Success"
                        }
                    ]
                }
            ]
        },
        {
            "path":"/users/setPassword.jq",
            "operations":[
                {
                    "method":"POST",
                    "summary":"Set the password for a user based on email and the reset password token",
                    "notes":"",
                    "type":"Success",
                    "nickname":"setPassword",
                    "parameters":[
                        {
                            "name":"email",
                            "description":"The email of the user to set the password",
                            "required":true,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name":"password",
                            "description":"The new password",
                            "required":true,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name":"resetToken",
                            "description":"The reset password token",
                            "required":true,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name": "_method",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages":[
                        {
                            "code": 400,
                            "message": "if a mandatory parameter is missing",
                            "responseModel": "Error"
                        },
                        {
                            "code" : 403,
                            "message": "if the user doesn't exist or the token is invalid",
                            "responseModel": "Error"
                        }
                    ],
                    "successMessages" : [
                        {
                            "code": 200,
                            "message": "if the user's password was updated successfully",
                            "responseModel": "Success"
                        }
                    ]
                }
            ]
        },
        {
            "path":"/users/getPicture.jq",
            "operations":[
                {
                    "method":"GET",
                    "summary":"Get user picture",
                    "notes":"Use this function as target for image.",
                    "type":"User",
                    "nickname":"getPicture",
                    "parameters":[
                        {
                            "name":"userid",
                            "description":"User ID to get picture for. Default is current user.",
                            "required":false,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name": "token",
                            "description": "The token of the current session",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "_method",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages":[
                        {
                            "code":500,
                            "message":"Not done yet"
                        }
                    ]
                }
            ]
        },
        {
            "path":"/users/uploadPicture.jq",
            "operations":[
                {
                    "method":"POST",
                    "summary":"Upload user picture",
                    "notes":"",
                    "type":"User",
                    "nickname":"uploadPicture",
                    "parameters":[
                        {
                            "name":"userid",
                            "description":"",
                            "required":true,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name":"image",
                            "description":"The image file",
                            "required":true,
                            "type":"file",
                            "dataType" : "file",
                            "paramType":"query"
                        },
                        {
                            "name": "token",
                            "description": "The token of the current session",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "_method",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages":[
                        {
                            "code":500,
                            "message":"Not done yet"
                        }
                    ]
                }
            ]
        },
        {
            "path":"/users/removePicture.jq",
            "operations":[
                {
                    "method":"POST",
                    "summary":"Remove user picture",
                    "notes":"",
                    "type":"User",
                    "nickname":"removePicture",
                    "parameters":[
                        {
                            "name":"userid",
                            "description":"",
                            "required":true,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name": "token",
                            "description": "The token of the current session",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "_method",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages":[
                        {
                            "code":500,
                            "message":"Not done yet"
                        }
                    ]
                }
            ]
        },
        {
            "path":"/users/isAuthorized.jq",
            "operations":[
                {
                    "method":"POST",
                    "summary":"Checks to see if the current logged in user has a particular right",
                    "notes":"",
                    "type":"User",
                    "nickname":"isAuthorized",
                    "parameters":[
                        {
                            "name":"right",
                            "description":"The right id",
                            "required":true,
                            "type":"string",
                            "paramType":"query"
                        },
                        {
                            "name": "token",
                            "description": "The token of the current session",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "_method",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages":[
                        {
                            "code": 400,
                            "message": "if a mandatory parameter is missing",
                            "responseModel": "Error"
                        },
                        {
                            "code" : 403,
                            "message": "if the user doesn't exist or the token is invalid",
                            "responseModel": "Error"
                        },
                        {
                            "code" : 500,
                            "message": "if the user doesn't have the right",
                            "responseModel": "Error"
                        }
                    ],
                    "successMessages" : [
                        {
                            "code": 200,
                            "message": "if the user has the right",
                            "responseModel": "Success"
                        }
                    ]
                }
            ]
        }
    ]
}
