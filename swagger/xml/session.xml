<swagger swagger="1.2" host="secxbrl.28.io" basePath="/v1/_queries/public"><info><title>API Title</title><description type="xhtml" xml:lang="en"><p>This API can be used to authorize requests.</p><p>Exposes endpoints used for logging in with an email address and a password in order to retrieve a token that can be used for authorizing future request, creating or revoking a token having a custom expiration that can be used in consumer applications, destroying a session identified by a token, and listing the active tokens.</p><p>Also note, that the POST method can be simulated by using GET and adding the _method=POST parameter to the HTTP request.</p><p>Please keep in mind that URLs are case sensitive. That is, all parameters need to be provided as shown in the documentation.</p></description><version>1.0</version></info><schemes><scheme>http</scheme></schemes><produces><mime>application/json</mime></produces><resources><resource path="/session/login.jq"><description type="xhtml" xml:lang="en">Login</description><method method="POST" nickname="login"><summary>Login with email and password in order to retrieve a token.</summary><description type="xhtml" xml:lang="en">Description</description><parameters><parameter name="format" required="false" type="query" value-type="string"><description type="xhtml" xml:lang="en">The result format</description><enum><value>json</value><value>text</value><value>xml</value><value>excel</value></enum></parameter><parameter name="email" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">Email of user to login</description></parameter><parameter name="password" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">Password of user to login</description></parameter><parameter name="_method" required="false" type="query" value-type=""><description type="xhtml" xml:lang="en"/></parameter></parameters><errors><error code="400" reponse-model="Error"><description>if a mandatory parameter is missing</description></error><error code="403" reponse-model="Error"><description>if the user doesn't exist or could not be authenticated</description></error></errors><successes><error code="200" reponse-model="ProjectToken"><description>if the user was logged in successfully</description></error></successes><examples><example title="Login"><description>Login and retrieve a token</description><request>[API_URL]/_queries/public/session/login.jq?_method=POST&amp;email=you%40xbrl.io&amp;password=secret</request><response>{ "success" : true, "token" : "2b332b8e-3e90-40d2-8b83-28862ec30ee1", "name" : "Your Name" }</response></example></examples></method></resource><resource path="/session/logout.jq"><description type="xhtml" xml:lang="en">Logout</description><method method="POST" nickname="logout"><summary>Logout the user identified by the given API key.</summary><description type="xhtml" xml:lang="en">Description</description><parameters><parameter name="format" required="false" type="query" value-type="string"><description type="xhtml" xml:lang="en">The result format</description><enum><value>json</value><value>text</value><value>xml</value><value>excel</value></enum></parameter><parameter name="token" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">API token of the current user</description></parameter><parameter name="_method" required="false" type="query" value-type=""><description type="xhtml" xml:lang="en"/></parameter></parameters><errors><error code="400" reponse-model="Error"><description>if a mandatory parameter is missing</description></error></errors><successes><error code="200" reponse-model="Success"><description>if the user was logged out successfully</description></error></successes><examples><example title="Logout"><description>Logout the user identified by the given token</description><request>[API_URL]/_queries/public/session/logout.jq?_method=POST&amp;token=a02516b2-2cdb-4ef3-9e2e-adfaa3660b87</request><response>{ "success" : true }</response></example></examples></method></resource><resource path="/session/token.jq"><description type="xhtml" xml:lang="en">Create a new token</description><method method="POST" nickname="token"><summary>Create a token having a custom expiration duration.</summary><description type="xhtml" xml:lang="en">Description</description><parameters><parameter name="format" required="false" type="query" value-type="string"><description type="xhtml" xml:lang="en">The result format</description><enum><value>json</value><value>text</value><value>xml</value><value>excel</value></enum></parameter><parameter name="email" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">Email of user that creates the token</description></parameter><parameter name="password" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">Password of user that creates the token</description></parameter><parameter name="expiration" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">Expiration of the token, in ISO format (e.g.: 2014-04-29T14:32:05.0321Z)</description></parameter><parameter name="_method" required="false" type="query" value-type=""><description type="xhtml" xml:lang="en"/></parameter></parameters><errors><error code="400" reponse-model="Error"><description>if a mandatory parameter is missing</description></error><error code="403" reponse-model="Error"><description>if the user doesn't exist or could not be authenticated</description></error></errors><successes><error code="200" reponse-model="ProjectToken"><description>if the token was created successfully</description></error></successes><examples><example title="Create a new token"><description>Create a token that expires on Jan 1st 2020</description><request>[API_URL]/_queries/public/session/token.jq?_method=POST&amp;email=you%40xbrl.io&amp;password=secret&amp;expiration=2020-01-01T00:00:00.000000Z</request><response>{ "success" : true, "token" : "2b332b8e-3e90-40d2-8b83-28862ec30ee1" }</response></example></examples></method></resource><resource path="/session/revoke.jq"><description type="xhtml" xml:lang="en">Revoke a token</description><method method="POST" nickname="revoke"><summary>Revoke a token having a custom expiration duration.</summary><description type="xhtml" xml:lang="en">Description</description><parameters><parameter name="format" required="false" type="query" value-type="string"><description type="xhtml" xml:lang="en">The result format</description><enum><value>json</value><value>text</value><value>xml</value><value>excel</value></enum></parameter><parameter name="email" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">Email of user that owns the token</description></parameter><parameter name="password" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">Password of user that owns the token</description></parameter><parameter name="token" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">API token to revoke</description></parameter><parameter name="_method" required="false" type="query" value-type=""><description type="xhtml" xml:lang="en"/></parameter></parameters><errors><error code="400" reponse-model="Error"><description>if a mandatory parameter is missing</description></error><error code="403" reponse-model="Error"><description>if the user doesn't exist or could not be authenticated</description></error></errors><successes><error code="200" reponse-model="Success"><description>if the token was removed successfully</description></error></successes><examples><example title="Revoke a token"><description>Revoke a token having a custom expiration duration</description><request>[API_URL]/_queries/public/session/revoke.jq?_method=POST&amp;email=you%40xbrl.io&amp;password=secret&amp;token=a02516b2-2cdb-4ef3-9e2e-adfaa3660b87</request><response>{ "success" : true }</response></example></examples></method></resource><resource path="/session/tokens.jq"><description type="xhtml" xml:lang="en">List Tokens</description><method method="GET" nickname="tokens"><summary>List tokens of a user identified by its token.</summary><description type="xhtml" xml:lang="en">Description</description><parameters><parameter name="format" required="false" type="query" value-type="string"><description type="xhtml" xml:lang="en">The result format</description><enum><value>json</value><value>text</value><value>xml</value><value>excel</value></enum></parameter><parameter name="token" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">A valid API token</description></parameter><parameter name="_method" required="false" type="query" value-type=""><description type="xhtml" xml:lang="en"/></parameter></parameters><errors><error code="400" reponse-model="Error"><description>if a mandatory parameter is missing</description></error></errors><successes><error code="200" reponse-model=""><description>if the tokens are listed successfully</description></error></successes><examples><example title="List Tokens"><description>List tokens of a particular user</description><request>[API_URL]/_queries/public/session/tokens.jq?_method=POST&amp;token=a02516b2-2cdb-4ef3-9e2e-adfaa3660b87</request><response>{ "success" : true, "results": [ { "token" : "2b332b8e-3e90-40d2-8b83-28862ec30ee1", "expiration" : "2020-01-01T00:00:00.000000Z" } ] }</response></example></examples></method></resource></resources></swagger>