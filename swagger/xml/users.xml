<swagger swagger="1.2" host="secxbrl.28.io" basePath="/v1/_queries/public"><info><title>API Title</title><description type="xhtml" xml:lang="en">This API can be used to manage users. Note, that the POST method can be simulated by using GET and adding the _method=POST parameter to the HTTP request. </description><version>1.0.0</version></info><schemes><scheme>http</scheme></schemes><produces><mime>application/json</mime></produces><resources><resource path="/users/get.jq"><description type="xhtml" xml:lang="en"/><method method="GET" nickname="getUser"><summary>Retrieve user record by ID or email</summary><description type="xhtml" xml:lang="en">Description</description><parameters><parameter name="userid" required="false" type="query" value-type="string"><description type="xhtml" xml:lang="en"/></parameter><parameter name="email" required="false" type="query" value-type="string"><description type="xhtml" xml:lang="en"/></parameter><parameter name="token" required="false" type="query" value-type="string"><description type="xhtml" xml:lang="en">The token of the current session</description></parameter><parameter name="_method" required="false" type="query" value-type=""><description type="xhtml" xml:lang="en"/></parameter></parameters><errors><error code="500" reponse-model=""><description>Not done yet</description></error></errors><successes/></method></resource><resource path="/users/new.jq"><description type="xhtml" xml:lang="en"/><method method="POST" nickname="newUser"><summary>Create new user record</summary><description type="xhtml" xml:lang="en">Description</description><parameters><parameter name="firstname" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en"/></parameter><parameter name="lastname" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en"/></parameter><parameter name="email" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en"/></parameter><parameter name="password" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">Will be removed after notifications are implemented.</description></parameter><parameter name="_method" required="false" type="query" value-type=""><description type="xhtml" xml:lang="en"/></parameter></parameters><errors><error code="500" reponse-model=""><description>Not done yet</description></error></errors><successes/></method></resource><resource path="/users/edit.jq"><description type="xhtml" xml:lang="en"/><method method="POST" nickname="editUser"><summary>Edit user record</summary><description type="xhtml" xml:lang="en">Description</description><parameters><parameter name="userid" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en"/></parameter><parameter name="firstname" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en"/></parameter><parameter name="lastname" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en"/></parameter><parameter name="newemail" required="false" type="query" value-type="string"><description type="xhtml" xml:lang="en"/></parameter><parameter name="email" required="false" type="query" value-type="string"><description type="xhtml" xml:lang="en">Email of the authorized user (needed if changing the email)</description></parameter><parameter name="password" required="false" type="query" value-type="string"><description type="xhtml" xml:lang="en">Password of the authorized user (needed if changing the email)</description></parameter><parameter name="token" required="false" type="query" value-type="string"><description type="xhtml" xml:lang="en">The token of the current session</description></parameter><parameter name="_method" required="false" type="query" value-type=""><description type="xhtml" xml:lang="en"/></parameter></parameters><errors><error code="400" reponse-model="Error"><description>if a mandatory parameter is missing</description></error><error code="403" reponse-model="Error"><description>if the user doesn't exist or could not be authenticated</description></error></errors><successes><error code="200" reponse-model="Success"><description>if the user's infos were updated successfully</description></error></successes></method></resource><resource path="/users/resetPassword.jq"><description type="xhtml" xml:lang="en"/><method method="POST" nickname="resetPassword"><summary>Change user password</summary><description type="xhtml" xml:lang="en">Description</description><parameters><parameter name="userid" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">Id of the user</description></parameter><parameter name="newpassword" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">New password</description></parameter><parameter name="email" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">Email of the authorized user</description></parameter><parameter name="password" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">Password of the authorized user</description></parameter><parameter name="token" required="false" type="query" value-type="string"><description type="xhtml" xml:lang="en">The token of the current session</description></parameter><parameter name="_method" required="false" type="query" value-type=""><description type="xhtml" xml:lang="en"/></parameter></parameters><errors><error code="400" reponse-model="Error"><description>if a mandatory parameter is missing</description></error><error code="403" reponse-model="Error"><description>if the user doesn't exist or could not be authenticated</description></error></errors><successes><error code="200" reponse-model="Success"><description>if the user's password was updated successfully</description></error></successes></method></resource><resource path="/users/forgotPassword.jq"><description type="xhtml" xml:lang="en"/><method method="POST" nickname="forgotPassword"><summary>Send the email with the reset password token</summary><description type="xhtml" xml:lang="en">Description</description><parameters><parameter name="email" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en"/></parameter></parameters><errors/><successes><error code="200" reponse-model="Success"><description>if the user's reset password token was sent via email</description></error></successes></method></resource><resource path="/users/setPassword.jq"><description type="xhtml" xml:lang="en"/><method method="POST" nickname="setPassword"><summary>Set the password for a user based on email and the reset password token</summary><description type="xhtml" xml:lang="en">Description</description><parameters><parameter name="email" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">The email of the user to set the password</description></parameter><parameter name="password" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">The new password</description></parameter><parameter name="resetToken" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">The reset password token</description></parameter><parameter name="_method" required="false" type="query" value-type=""><description type="xhtml" xml:lang="en"/></parameter></parameters><errors><error code="400" reponse-model="Error"><description>if a mandatory parameter is missing</description></error><error code="403" reponse-model="Error"><description>if the user doesn't exist or the token is invalid</description></error></errors><successes><error code="200" reponse-model="Success"><description>if the user's password was updated successfully</description></error></successes></method></resource><resource path="/users/getPicture.jq"><description type="xhtml" xml:lang="en"/><method method="GET" nickname="getPicture"><summary>Get user picture</summary><description type="xhtml" xml:lang="en">Description</description><parameters><parameter name="userid" required="false" type="query" value-type="string"><description type="xhtml" xml:lang="en">User ID to get picture for. Default is current user.</description></parameter><parameter name="token" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">The token of the current session</description></parameter><parameter name="_method" required="false" type="query" value-type=""><description type="xhtml" xml:lang="en"/></parameter></parameters><errors><error code="500" reponse-model=""><description>Not done yet</description></error></errors><successes/></method></resource><resource path="/users/uploadPicture.jq"><description type="xhtml" xml:lang="en"/><method method="POST" nickname="uploadPicture"><summary>Upload user picture</summary><description type="xhtml" xml:lang="en">Description</description><parameters><parameter name="userid" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en"/></parameter><parameter name="image" required="true" type="query" value-type="file"><description type="xhtml" xml:lang="en">The image file</description></parameter><parameter name="token" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">The token of the current session</description></parameter><parameter name="_method" required="false" type="query" value-type=""><description type="xhtml" xml:lang="en"/></parameter></parameters><errors><error code="500" reponse-model=""><description>Not done yet</description></error></errors><successes/></method></resource><resource path="/users/removePicture.jq"><description type="xhtml" xml:lang="en"/><method method="POST" nickname="removePicture"><summary>Remove user picture</summary><description type="xhtml" xml:lang="en">Description</description><parameters><parameter name="userid" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en"/></parameter><parameter name="token" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">The token of the current session</description></parameter><parameter name="_method" required="false" type="query" value-type=""><description type="xhtml" xml:lang="en"/></parameter></parameters><errors><error code="500" reponse-model=""><description>Not done yet</description></error></errors><successes/></method></resource><resource path="/users/isAuthorized.jq"><description type="xhtml" xml:lang="en"/><method method="POST" nickname="isAuthorized"><summary>Checks to see if the current logged in user has a particular right</summary><description type="xhtml" xml:lang="en">Description</description><parameters><parameter name="right" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">The right id</description></parameter><parameter name="token" required="true" type="query" value-type="string"><description type="xhtml" xml:lang="en">The token of the current session</description></parameter><parameter name="_method" required="false" type="query" value-type=""><description type="xhtml" xml:lang="en"/></parameter></parameters><errors><error code="400" reponse-model="Error"><description>if a mandatory parameter is missing</description></error><error code="403" reponse-model="Error"><description>if the user doesn't exist or the token is invalid</description></error><error code="500" reponse-model="Error"><description>if the user doesn't have the right</description></error></errors><successes><error code="200" reponse-model="Success"><description>if the user has the right</description></error></successes></method></resource></resources></swagger>